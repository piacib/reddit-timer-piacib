{"version":3,"sources":["globalStyles.js","components/InfoSection/InfoSection.styles.js","components/InfoSection/InfoSection.js","components/Posts/SelectedPostsDisplay.styles.js","components/Posts/SelectedPostsDisplay.js","components/Table/media/table.png","components/Loading/loading.svg","components/Loading/Loading.js","components/Table/TableFunctions.js","components/Table/useSubredditSearch.js","components/Table/Table.styles.js","components/Table/Table.js","components/Search/Search.styles.js","components/Search/Search.js","pages/HomePage.js","pages/SearchPage.js","theme.js","components/Header/media/logo.svg","components/Header/Header.styles.js","components/Header/Burger/Burger.styled.js","components/Header/Burger/Burger.js","components/Header/Header.js","components/Footer/media/sign.svg","components/Footer/FooterStyles.js","components/Footer/Footer.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral","props","theme","font","family","default","size","lineHeight","letterSpacing","color","text","h1","Info","styled","div","InfoContainer","_templateObject2","mobile","menuMinimizeWidth","InfoTitle","h3","_templateObject3","dark","InfoList","ul","_templateObject4","InfoBulletPoint","li","_templateObject5","AboutText","p","_templateObject6","AboutTitle","_templateObject7","HyperLink","a","_templateObject8","InfoSection","_jsxs","children","_jsx","SelectedPostTitle","SelectedPostAttribute","SelectedPost","SelectedPostDisplay","_ref","title","score","upvoteRatio","fullLink","author","href","concat","defaultProps","rotate360","keyframes","LoadingSVG","img","Loading","isLoading","src","loadingImg","alt","generateHours","date","getHours","Math","round","getMinutes","timeFrames","colorMap","table","defaultCalendar","createDayTable","postsFromOneDay","dayTable","i","length","created_hour","updateCalendar","postsArray","filteredByDay","map","day","filter","x","created_day","Number","updatedCalendar","useSubRedditSearch","subreddit","_useState","useState","_useState2","_slicedToArray","calendar","setCalendar","_useState3","_useState4","posts","setPosts","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","useEffect","redditUrl","timeFrame","_ref$querySize","querySize","generateUrl","controller","AbortController","_fetchSubredditData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","jsonResp","wrap","_context","prev","next","fetch","signal","sent","json","console","log","data","upvote_ratio","abrupt","forEach","post","Date","created_utc","push","full_link","getDay","t0","abort","stop","apply","arguments","_x","fetchSubredditData","TableContainer","dateContainerWidth","tableHeadHeight","exampleContainer","HeatMapImage","TableHead","tableHeadBackground","TimeDisplay","boxSize","DateContainer","backgroundColor","tableDay","DateDisplay","light","HeatmapTable","HeatmapTableBody","tbody","HeatmapTableRow","tr","_templateObject9","boxSixe","HeatMapDataEntry","td","_templateObject10","value","SelectedPostContainer","_templateObject11","ErrorMessage","span","_templateObject12","dates","times","Table","selectedPost","setSelectedPosts","_useSubRedditSearch","_Fragment","time","Object","keys","dayOfTheWeek","slice","timeOfTheDay","onClick","random","tableImg","SearchContainer","Headline","headline","SubmitSubredditSearch","Link","small","showBestResults","width","SubredditInput","input","readOnly","SubText","SubredditInputContainer","SubredditInputLabel","label","Search","useParams","searchParam","setSearchParam","page","to","id","type","onChange","e","target","HomePage","SearchPage","midDark","midLight","tableWidth","yellowGreen","greenVeryLight","greenLight","greenMedium","greenRegular","greenMediumLight","blueRegular","tableMinimizeMaxWidth","containerSizes","headerHeight","footerHeight","StyledNavLink","StyledHeaderSVG","HeaderContainer","header","Menu","open","MenuItems","StyledBurger","button","_ref2","primaryDark","primaryLight","_ref3","_ref4","_ref5","_ref6","BurgerMenuContainer","Burger","setOpen","menuList","isExpanded","item","displayName","pages","Header","burgerOpen","setBurgerOpen","logo","StyledFooterSVG","StyledFooterSVGLink","StyledFooterLink","FooterContainer","footer","Footer","as","rel","sign","App","Router","ThemeProvider","Switch","Route","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19dad06c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  /** Montserrat Regular **/\n  @font-face {\n    font-family: \"Montserrat\";\n    font-weight: 400;\n    font-style: normal;\n    src: url(\"/fonts/Montserrat-Regular.woff2\") format(\"woff2\"),\n url(\"/fonts/Montserrat-Regular.woff\") format(\"woff\");\n  }\n\n  /** Montserrat Medium **/\n  @font-face {\n    font-family: \"Montserrat\";\n    font-weight: 500;\n    font-style: normal;\n    src: url(\"/fonts/Montserrat-Medium.woff2\") format(\"woff2\"),\n url(\"/fonts/Montserrat-Medium.woff\") format(\"woff\");\n  }\n\n  /** Montserrat SemiBold **/\n  @font-face {\n    font-family: \"Montserrat\";\n    font-weight: 600;\n    font-style: normal;\n    src: url(\"/fonts/Montserrat-SemiBold.woff2\") format(\"woff2\"),\n url(\"/fonts/Montserrat-SemiBold.woff\") format(\"woff\");\n  }\n\n  /** Montserrat Bold **/\n  @font-face {\n    font-family: \"Montserrat\";\n    font-weight: 700;\n    font-style: normal;\n    src: url(\"Montserrat-Bold.woff2\") format(\"woff2\"),\n url(\"Montserrat-Bold.woff\") format(\"woff\");\n  }\n\n  /** Bitter Regular **/\n  @font-face {\n    font-family: \"Bitter\";\n    src: url(\"/fonts/Bitter-Regular.woff2\") format(\"woff2\"),\n url(\"/fonts/Bitter-Regular.woff\") format(\"woff\");\n  }\n\n  body {\n    font-family: ${(props) => props.theme.font.family.default};\n    font-size: ${(props) => props.theme.font.size.default};\n    line-height: ${(props) => props.theme.font.lineHeight.default};\n    letter-spacing: ${(props) => props.theme.font.letterSpacing.default};\n    color: ${(props) => props.theme.color.text};\n    \n  }\n\n    h1, h2, h3 {\n    font-family: 'Bitter', serif;\n    font-weight: 400;\n    letter-spacing: ${(props) => props.theme.font.letterSpacing.h1};\n\n    }\n    p, a, button, input {\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 400;\n    }\n    a {\n    text-align: center;\n    text-decoration: none;\n    white-space: nowrap;\n    color: rgba(99, 99, 99, 1);\n    }\n`;\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nexport const Info = styled.div`\n`;\nexport const InfoContainer = styled.div`\nmax-width:738px;\nmargin: 133px auto 96px auto;\n${Info}:first-child{\n  margin-bottom:100px;\n}\n\npadding: 0 15px;\n@media (max-width: ${(props) => props.theme.mobile.menuMinimizeWidth}) {    \n    ${Info}:first-child{\n  margin-bottom:0;\n}\nmargin-top:96px;\n}\n\n`;\nexport const InfoTitle = styled.h3`\ncolor: ${(props) => props.theme.color.dark};\nfont-size: 1.5rem;\nletter-spacing: 0;\nmargin-bottom:5px;\n@media (max-width: ${(props) => props.theme.mobile.menuMinimizeWidth}) {    \n    text-align: center;\n}\n`;\nexport const InfoList = styled.ul`\n  margin:0;\n  margin-bottom:0;\n  padding:0;\n  list-style:none;\n\n`;\nexport const InfoBulletPoint = styled.li`\n:before{ content:\"• \";}\n  letter-spacing: 0;\n`;\nexport const AboutText = styled.p`\nmargin:0;\n@media (max-width: ${(props) => props.theme.mobile.menuMinimizeWidth}) {    \n    margin: 15px;\n}\n`;\nexport const AboutTitle = styled(InfoTitle)`\nmargin-bottom: 7px;\n`;\nexport const HyperLink = styled.a`\ncolor: blue;\n:before {\n    content: ' ';\n}\n:after {\n    content: ' ';\n}`;\n","import React from 'react';\nimport {\n  Info,\n  InfoContainer,\n  InfoTitle,\n  InfoList,\n  InfoBulletPoint,\n  AboutText,\n  AboutTitle,\n  HyperLink,\n} from './InfoSection.styles';\n\nconst InfoSection = () => (\n  <InfoContainer>\n    <Info>\n      <InfoTitle>How it works</InfoTitle>\n      <InfoList>\n        <InfoBulletPoint>\n          We find the 500 top posts from the past year for a subreddit.\n        </InfoBulletPoint>\n        <InfoBulletPoint>\n          The data is visualized in a heatmap grouped by weekday and hour of the day.\n        </InfoBulletPoint>\n        <InfoBulletPoint>See immediately when to submit your reddit post.</InfoBulletPoint>\n      </InfoList>\n    </Info>\n    <Info>\n      <AboutTitle>About</AboutTitle>\n      <AboutText>\n        This app was created during a course on\n        <HyperLink>profy.dev</HyperLink>\n        with the goal to implement a pixel-perfect real-world application with professional\n        workflows and tools like Kanban, Asana, Zeplin, GitHub, pull requests and code reviews.\n        <HyperLink>Click here for more information.</HyperLink>\n      </AboutText>\n    </Info>\n  </InfoContainer>\n);\nexport default InfoSection;\n","import styled from 'styled-components';\n\nexport const SelectedPostTitle = styled.a`\n  max-width: 700px;\n  overflow: hidden;\n  white-space: pre-wrap;\n`;\nexport const SelectedPostAttribute = styled.div``;\nexport const SelectedPost = styled.div`\n  border-bottom: 1px solid black;\n  margin-bottom: 1rem;\n  max-width: 700px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SelectedPostTitle,\n  SelectedPostAttribute,\n  SelectedPost,\n} from './SelectedPostsDisplay.styles';\n\nconst SelectedPostDisplay = ({\n  title, score, upvoteRatio, fullLink, author,\n}) => (\n  <SelectedPost>\n    <SelectedPostTitle href={fullLink}>{title}</SelectedPostTitle>\n    <SelectedPostAttribute>\n      Score:\n      <span> </span>\n      {score}\n    </SelectedPostAttribute>\n    <SelectedPostAttribute>\n      Upvote Ratio:\n      <span> </span>\n      {upvoteRatio ? `${upvoteRatio}` : '---'}\n    </SelectedPostAttribute>\n    <SelectedPostAttribute>\n      Author:\n      <span> </span>\n      {author}\n    </SelectedPostAttribute>\n  </SelectedPost>\n);\n\nSelectedPostDisplay.propTypes = {\n  title: PropTypes.string,\n  score: PropTypes.number,\n  upvoteRatio: PropTypes.number,\n  fullLink: PropTypes.string,\n  author: PropTypes.string,\n};\nSelectedPostDisplay.defaultProps = {\n  title: '',\n  score: 0,\n  upvoteRatio: 0,\n  fullLink: '',\n  author: '',\n};\nexport default SelectedPostDisplay;\n","export default __webpack_public_path__ + \"static/media/table.4800820e.png\";","export default __webpack_public_path__ + \"static/media/loading.003c3e02.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\nimport loadingImg from './loading.svg';\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(360deg);\n  }\n  to {\n    transform: rotate(0deg);\n  }\n`;\n\nconst LoadingSVG = styled.img`\n  animation: ${rotate360} 3s linear infinite;\nheight: 200px;\nwidth: 200px;\nmargin: 100px 470px;\nposition: absolute;\n`;\nconst Loading = ({ isLoading }) => (isLoading ? <LoadingSVG src={loadingImg} alt=\"loading spinner\" /> : null);\nLoading.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\nexport default Loading;\n","export const generateUrl = ({ timeFrame, subreddit, querySize = 500 }) => `https://api.pushshift.io/reddit/submission/search/?subreddit=${subreddit}&size=${querySize}&${timeFrame}&order=desc&sort=score`;\nexport const generateHours = (date) => date.getHours() + Math.round(date.getMinutes() / 60);\n// converts post number to color\n// color to number or posts relations\nexport const timeFrames = ['after=1y', 'before=1y&after=2y', 'before=2y&after=3y', 'before=3y&after=4y', 'before=4y&after=5y'];\nconst colorMap = {\n  0: 'yellowGreen',\n  2: 'greenVeryLight',\n  4: 'greenLight',\n  5: 'greenMedium',\n  8: 'greenRegular',\n  9: 'greenMediumLight',\n  16: 'blueRegular',\n};\nexport const valueToColor = (value) => {\n  if (value === 0) {\n    return colorMap[0];\n  }\n  if (value <= 2) {\n    return colorMap[2];\n  }\n  if (value <= 4) {\n    return colorMap[4];\n  }\n  if (value === 5) {\n    return colorMap[5];\n  }\n  if (value <= 8) {\n    return colorMap[8];\n  }\n  if (value <= 9) {\n    return colorMap[9];\n  }\n  return colorMap[16];\n};\nexport const table = {\n  0: 0,\n  1: 0,\n  2: 0,\n  3: 0,\n  4: 0,\n  5: 0,\n  6: 0,\n  7: 0,\n  8: 0,\n  9: 0,\n  10: 0,\n  11: 0,\n  12: 0,\n  13: 0,\n  14: 0,\n  15: 0,\n  16: 0,\n  17: 0,\n  18: 0,\n  19: 0,\n  20: 0,\n  21: 0,\n  22: 0,\n  23: 0,\n  24: 0,\n};\nexport const defaultCalendar = {\n  0: table,\n  1: table,\n  2: table,\n  3: table,\n  4: table,\n  5: table,\n  6: table,\n};\n  // function to generate each row or day of data\nexport const createDayTable = (postsFromOneDay) => {\n  const dayTable = {\n    0: 0,\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0,\n    6: 0,\n    7: 0,\n    8: 0,\n    9: 0,\n    10: 0,\n    11: 0,\n    12: 0,\n    13: 0,\n    14: 0,\n    15: 0,\n    16: 0,\n    17: 0,\n    18: 0,\n    19: 0,\n    20: 0,\n    21: 0,\n    22: 0,\n    23: 0,\n    24: 0,\n  };\n  for (let i = 0; i < postsFromOneDay.length; i += 1) {\n    const post = postsFromOneDay[i];\n    dayTable[post.created_hour] += 1;\n  }\n  return dayTable;\n};\n  // function that uses createDayTable to\n  // create entire new calendar object\nexport const updateCalendar = (postsArray) => {\n  const filteredByDay = [0, 1, 2, 3, 4, 5, 6].map((day) => (\n    postsArray.filter((x) => x.created_day === Number(day))));\n  const updatedCalendar = {\n    0: createDayTable(filteredByDay[0]),\n    1: createDayTable(filteredByDay[1]),\n    2: createDayTable(filteredByDay[2]),\n    3: createDayTable(filteredByDay[3]),\n    4: createDayTable(filteredByDay[4]),\n    5: createDayTable(filteredByDay[5]),\n    6: createDayTable(filteredByDay[6]),\n  };\n    // last element in each dayTable is 11:30-12am\n    // therefore they must be added to the following daysTable\n  updatedCalendar[0][0] += updatedCalendar[6][24];\n  updatedCalendar[1][0] += updatedCalendar[0][24];\n  updatedCalendar[2][0] += updatedCalendar[1][24];\n  updatedCalendar[3][0] += updatedCalendar[2][24];\n  updatedCalendar[4][0] += updatedCalendar[3][24];\n  updatedCalendar[5][0] += updatedCalendar[4][24];\n  updatedCalendar[6][0] += updatedCalendar[5][24];\n  return updatedCalendar;\n};\n","import { useState, useEffect } from 'react';\nimport {\n  generateHours,\n  generateUrl,\n  updateCalendar,\n  defaultCalendar,\n  timeFrames,\n} from './TableFunctions';\n\nconst useSubRedditSearch = (subreddit) => {\n  const [calendar, setCalendar] = useState(defaultCalendar);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    // early exit function\n    if (!subreddit) return {};\n    const redditUrl = generateUrl({ timeFrame: timeFrames[0], subreddit, querySize: 500 });\n    const controller = new AbortController();\n    async function fetchSubredditData(url) {\n      // reset calendar data while\n      // new data is fetched\n      setLoading(true);\n      setCalendar(defaultCalendar);\n      // fetch data\n      try {\n        const response = await fetch(url, {\n          signal: controller.signal,\n        });\n        const jsonResp = await response.json();\n        console.log(jsonResp.data.map((x) => x.upvote_ratio));\n        const postsArray = [];\n        if (jsonResp.data.length === 0) {\n          setError('no subreddit found');\n          setCalendar(defaultCalendar);\n          setPosts([]);\n          return;\n        }\n        setError(false);\n        jsonResp.data.forEach((post) => {\n          const date = new Date(post.created_utc * 1000);\n          postsArray.push({\n            score: post.score,\n            title: post.title,\n            upvote_ratio: post.upvote_ratio,\n            full_link: post.full_link,\n            author: post.author,\n            created_utc: post.created_utc,\n            created_day: date.getDay(),\n            created_hour: generateHours(date),\n          });\n        });\n        const updatedCalendar = await updateCalendar(postsArray);\n        // set fetched data to states\n        setPosts(postsArray);\n        setCalendar(updatedCalendar);\n        setLoading(false);\n      } catch (e) {\n        controller?.abort();\n      }\n    }\n    fetchSubredditData(redditUrl);\n    // cleanup function\n    return () => { controller?.abort(); };\n    // updates when new subreddit is searched\n  }, [subreddit]);\n  return {\n    calendar, posts, loading, error,\n  };\n};\nexport default useSubRedditSearch;\n","import styled from 'styled-components';\nimport { valueToColor } from './TableFunctions';\n// styled components\nconst tableWidth = '1115px';\nexport const TableContainer = styled.div`\n  max-width: ${tableWidth};\n  width: 100%;\n  border: none;\n  position: relative;\n  margin: 2rem 1rem;\n  font-family: \"Montserrat\", sans-serif;\n  font-weight: 600;\n  grid-template-columns: ${(props) => props.theme.table.dateContainerWidth} auto;\n  grid-template-rows: ${(props) => props.theme.table.tableHeadHeight} auto;\n  overflow-x:auto;\n  display: ${(props) => !props.exampleContainer && 'grid'};\n`;\nexport const HeatMapImage = styled.img`\n  width:1115px;\n  height:333px;\n`;\n\nexport const TableHead = styled.div`\n  height: ${(props) => props.theme.table.tableHeadHeight};\n  width:960px;\n  background: ${(props) => props.theme.table.tableHeadBackground};\n  align-self: end;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  grid-column: 2;\n\n`;\nexport const TimeDisplay = styled.div`\n  text-align: center;\n  font-size: 0.875rem;\n  font-weight: 600;\n  width: ${(props) => `calc(2 * ${props.theme.table.boxSize})`};\n\n`;\nexport const DateContainer = styled.div`\n  flex-direction: column;\n  justify-content: space-between;\n  width: ${(props) => props.theme.table.dateContainerWidth};\n  background-color: ${(props) => props.theme.backgroundColor.tableDay};\nposition:sticky;\nleft:0;\n\n`;\nexport const DateDisplay = styled.div`\n  grid-column: 1;\n  grid-row: 2;\n  font-size: 0.9375rem;\n  text-align: center;\n  color: ${(props) => props.theme.color.light};\n  height: ${(props) => props.theme.table.boxSize};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\nexport const HeatmapTable = styled.table`\n  border-spacing: 0;\n  width:960px;\n`;\nexport const HeatmapTableBody = styled.tbody`\n  border-spacing: 0;\n  grid-column: 2;\n  grid-row: 2;\n`;\nexport const HeatmapTableRow = styled.tr`\n  height: ${(props) => props.theme.table.boxSixe};\n`;\nexport const HeatMapDataEntry = styled.td`\n  text-align: center;\n  cursor: pointer;\n  background-color: ${(props) => props.theme.table.color[valueToColor(props.value)]};\n  color: ${(props) => props.theme.color.light};\n  padding: 0;\n  height: 40px;\n  width: 40px;\n  \n`;\nexport const SelectedPostContainer = styled.div`\n`;\nexport const ErrorMessage = styled.span`\nwidth:100%;\ngrid-column: 1/-1;\ntext-align: center;\nfont-size:1.3rem;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SelectedPostDisplay from '../Posts/SelectedPostsDisplay';\nimport tableImg from './media/table.png';\nimport Loading from '../Loading/Loading';\nimport useSubRedditSearch from './useSubredditSearch';\nimport {\n  TableContainer, HeatMapImage,\n  TableHead,\n  TimeDisplay,\n  DateContainer,\n  DateDisplay,\n  HeatmapTable,\n  HeatmapTableBody,\n  HeatmapTableRow,\n  ErrorMessage,\n  HeatMapDataEntry, SelectedPostContainer,\n} from './Table.styles';\n\nconst dates = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst times = ['12:00am', '2:00am', '4:00am', '6:00am', '8:00am', '10:00am', '12:00pm', '2:00pm', '4:00pm', '6:00pm', '8:00pm', '10:00pm'];\nconst Table = ({ subreddit }) => {\n  const [selectedPost, setSelectedPosts] = useState([]);\n  const {\n    calendar, posts, loading, error,\n  } = useSubRedditSearch(subreddit);\n  if (!subreddit) {\n    return (\n      <TableContainer exampleContainer>\n        <HeatMapImage src={tableImg} alt=\"heat map table\" />\n      </TableContainer>\n    );\n  }\n  return (\n    <>\n      { !error ? (\n        <>\n          <TableContainer>\n            <Loading isLoading={loading} />\n            <TableHead>\n              {times.map((time) => (\n                <TimeDisplay key={time}>{time}</TimeDisplay>\n              ))}\n            </TableHead>\n            <DateContainer>\n              {dates.map((day) => (\n                <DateDisplay key={day}>{day}</DateDisplay>\n              ))}\n            </DateContainer>\n            <HeatmapTable>\n              <HeatmapTableBody>\n                {Object.keys(calendar).map((dayOfTheWeek) => (\n                  <HeatmapTableRow key={dayOfTheWeek}>\n                    {Object.keys(calendar[dayOfTheWeek])\n                      .slice(0, 24)\n                      .map((timeOfTheDay) => (\n                        <HeatMapDataEntry\n                          onClick={() => setSelectedPosts(\n                            posts.filter(\n                              (post) => post.created_day === Number(dayOfTheWeek)\n                              && post.created_hour === Number(timeOfTheDay),\n                            ),\n                          )}\n                          key={Math.random()}\n                          value={calendar[dayOfTheWeek][timeOfTheDay]}\n                        >\n                          {calendar[dayOfTheWeek][timeOfTheDay]}\n                        </HeatMapDataEntry>\n                      ))}\n                  </HeatmapTableRow>\n                ))}\n              </HeatmapTableBody>\n            </HeatmapTable>\n          </TableContainer>\n          <SelectedPostContainer>\n            {selectedPost.map((post) => (\n              <SelectedPostDisplay\n                title={post.title}\n                score={post.score}\n                upvoteRatio={post.upvote_ratio}\n                fullLink={post.full_link}\n                author={post.author}\n              />\n            ))}\n          </SelectedPostContainer>\n        </>\n      ) : (\n        <TableContainer>\n          <ErrorMessage>{error}</ErrorMessage>\n        </TableContainer>\n      )}\n    </>\n  );\n};\nTable.propTypes = {\n  subreddit: PropTypes.string,\n};\nTable.defaultProps = {\n  subreddit: '',\n};\n\nexport default Table;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SearchContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 .5rem;\n`;\nexport const Headline = styled.h1`\n  color: ${(props) => props.theme.color.dark};\n  font-size: 38px;\n  margin: 1.625rem 0 0;\n  line-height: 46px;\n  letter-spacing: 0.9px;\n  font-style: normal;\n  text-align: center;\n  font-weight: normal;\n  /* ${(props) => props.theme.font.size.headline}; */\n`;\nexport const SubmitSubredditSearch = styled(Link)`\n  background: rgba(253, 183, 85, 1);\n  border: none;\n  letter-spacing: 0.07px;\n  margin: 2.6875rem 0 0;\n  border-radius: 4px;\n  text-decoration: none;\n  text-align: center;\n  font-size: ${(props) => props.theme.font.size.small};\n  color: ${(props) => props.theme.color.light};\n  width: ${(props) => props.theme.showBestResults.width};\n  padding: 0.375rem 0;\n`;\nexport const SubredditInput = styled.input`\n  border: none;\n  font-family: 'Montserrat', sans-serif;\n\n  width: ${(props) => `calc(${props.theme.showBestResults.width} / 2 )`};\n  &:focus {\n    outline: ${(props) => (props.readOnly ? 'none' : 'default')};\n  }\n`;\nexport const SubText = styled.p`\n  margin: 1rem 0 0;\n  text-align: center;\n  padding: 0 0.5rem;\n`;\nexport const SubredditInputContainer = styled.div`\n  margin: 2.625rem 0 0;\n  display: flex;\n  justify-content: center;\n  overflow: visible;\n  width: ${(props) => props.theme.showBestResults.width};\n`;\nexport const SubredditInputLabel = styled.label`\n  padding-left: 2rem;\n  text-align: end;\n`;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Table from '../Table/Table';\nimport {\n  SearchContainer,\n  Headline,\n  SubmitSubredditSearch,\n  SubredditInput,\n  SubText,\n  SubredditInputContainer,\n  SubredditInputLabel,\n} from './Search.styles';\n\nconst Search = () => {\n  const { subreddit } = useParams();\n  const [searchParam, setSearchParam] = useState('javascript');\n  const page = subreddit ? false : 'readOnly';\n  const handleChange = (e) => {\n    setSearchParam(e.target.value);\n  };\n  return (\n    <SearchContainer>\n      <Headline>No reactions to your reddit posts?</Headline>\n      <SubText>Great timing, great results! Find the best time to post on your subreddit.</SubText>\n      <SubmitSubredditSearch to={`/search/${searchParam}`}>\n        SHOW ME THE BEST TIME\n      </SubmitSubredditSearch>\n      <SubredditInputContainer>\n        <SubredditInputLabel id=\"subreddit-input-label\">r/</SubredditInputLabel>\n        <SubredditInput\n          aria-labelledby=\"subreddit-input-label\"\n          type=\"text\"\n          value={searchParam}\n          readOnly={page}\n          onChange={handleChange}\n        />\n      </SubredditInputContainer>\n      <Table subreddit={subreddit} />\n    </SearchContainer>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport InfoSection from '../components/InfoSection/InfoSection';\nimport Search from '../components/Search/Search';\n\nconst HomePage = () => (\n  <>\n    <Search />\n    <InfoSection />\n  </>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport Search from '../components/Search/Search';\n\nconst SearchPage = () => (\n  <>\n    <Search />\n  </>\n);\n\nexport default SearchPage;\n","const theme = {\n  color: {\n    dark: 'rgba(0,0,0,1)', // #000000\n    text: 'rgba(147,145,143,1)', // #93918f\n    midDark: 'rgba(99,99,99,1)', // #636363\n    midLight: 'rgba(213,213,213,1)', // #d5d5d5\n    light: 'rgba(255,255,255,1)', // #ffffff\n  },\n  backgroundColor: {\n    tableDay: 'rgba(30,37,55,1)',\n  },\n  table: {\n    tableWidth: '1114px',\n    boxSize: '40px',\n    tableHeadHeight: '52px',\n    tableHeadBackground: 'linear-gradient(180deg, #FEFEFE 0%, #E9E9E9 100%);',\n    dateContainerWidth: '9.625rem',\n    color: {\n      yellowGreen: 'rgba(224, 229, 163, 1)', // 0\n      greenVeryLight: 'rgba(169, 209, 148, 1)', // 1 - 2\n      greenLight: 'rgba(160, 206, 147, 1)', // 3 - 4\n      greenMedium: 'rgba(140, 200, 148, 1)', // 5\n      greenRegular: 'rgba(94, 179, 145, 1)', // 6 - 8\n      greenMediumLight: 'rgba(90, 173, 140, 1)', // 9\n      blueRegular: 'rgba(57, 132, 163, 1)', // 10? - 11\n    },\n  },\n  mobile: {\n    tableMinimizeMaxWidth: '600px',\n    menuMinimizeWidth: '600px',\n  },\n  font: {\n    family: {\n      default: '\"Montserrat\", sans-serif',\n      headline: '\"Bitter\", serif',\n    },\n    size: {\n      default: '16px',\n      headline: '2.375rem',\n      small: '0.875rem',\n    },\n    lineHeight: {\n      default: 1.69,\n    },\n    letterSpacing: {\n      default: '0.07px',\n      h1: '0.75px',\n    },\n  },\n  containerSizes: {\n    headerHeight: '100px',\n    footerHeight: '100px',\n  },\n  showBestResults: {\n    width: '13.5625rem',\n  },\n};\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/logo.47ec2a15.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledNavLink = styled(Link)`\n  padding: 1px 0 0 1.5625em;\n`;\nexport const StyledFirstNavLink = styled(StyledNavLink)`\n  justify-content: center;\n  display: flex;\n`;\nexport const StyledHeaderSVG = styled(StyledNavLink)`\n  margin-right: auto;\n  padding: 0 1.5625em 2px 1px;\n  justify-content: center;\n  display: flex;\n`;\nexport const HeaderContainer = styled.header`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: ${(props) => props.theme.containerSizes.headerHeight};\n  padding: 0 5em;\n  @media (max-width: ${(props) => props.theme.mobile.menuMinimizeWidth}) {\n    padding: 0 1em 2em;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Menu = styled.div`\n  @media (max-width: ${(props) => props.theme.mobile.menuMinimizeWidth}) {    \n    display: ${({ open }) => (open ? 'flex' : 'none')};\n    position: absolute;\n    top: 2rem;\n    right: .3rem;\n    flex-direction: column;\n    align-items: flex-end;\n    :nth-child(1) {\n      justify-content: center;\n      display: flex;\n    }\n  }\n`;\nexport const MenuItems = styled(Link)`\n padding: 1px 0 0 1.5625em;\n  white-space: nowrap;\n  :hover {\n    text-decoration: underline;\n  }\n  `;\nexport const StyledBurger = styled.button`\ndisplay:none;\n@media (max-width: ${(props) => props.theme.mobile.menuMinimizeWidth}) {    \n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n  span {\n    background-color: black;\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ theme, open }) => (open ? theme.primaryDark : theme.primaryLight)};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n    :first-child {\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\n    }\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? '0' : '1')};\n      transform: ${({ open }) => (open ? 'translateX(20px)' : 'translateX(0)')};\n    }\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\n    }\n  }\n}\n`;\nexport const BurgerMenuContainer = styled.div`\n@media (max-width: ${(props) => props.theme.mobile.menuMinimizeWidth}) {    \n    display: flex;\n    flex-direction: column;\n  }\n  position: relative;\n`;\n","import React from 'react';\nimport {\n  bool, func, string, arrayOf, shape,\n} from 'prop-types';\nimport {\n  BurgerMenuContainer, Menu, MenuItems, StyledBurger,\n} from './Burger.styled';\n// Burger menu component that accepts a list of\n// {displayName, href} objects and converts it to a\n// menu of react-router-dom links\nconst Burger = ({ open, setOpen, menuList }) => {\n  const isExpanded = !!open;\n\n  return (\n    <BurgerMenuContainer>\n      <StyledBurger aria-label=\"Toggle menu\" aria-expanded={isExpanded} open={open} onClick={() => setOpen(!open)}>\n        <span />\n        <span />\n        <span />\n      </StyledBurger>\n      <Menu open={open}>\n        {menuList.map((item) => (\n          <MenuItems key={item.displayName} to={item.href}>\n            {item.displayName}\n          </MenuItems>\n        ))}\n      </Menu>\n    </BurgerMenuContainer>\n  );\n};\n\nBurger.propTypes = {\n  open: bool.isRequired,\n  setOpen: func.isRequired,\n  menuList: arrayOf(shape({\n    displayName: string,\n    href: string,\n  })).isRequired,\n};\n\nexport default Burger;\n","import React, { useState } from 'react';\nimport logo from './media/logo.svg';\nimport { StyledHeaderSVG, HeaderContainer } from './Header.styles';\nimport Burger from './Burger/Burger';\n\nconst pages = [\n  {\n    displayName: 'Search',\n    href: '/search/javascript',\n  },\n  {\n    displayName: 'How it works',\n    href: '/#how-it-works',\n  },\n  {\n    displayName: 'About',\n    href: '/#about',\n  },\n];\nconst Header = () => {\n  const [burgerOpen, setBurgerOpen] = useState(false);\n  return (\n    <HeaderContainer>\n      <StyledHeaderSVG data-testid=\"reddit-timer-svg\" to=\"/\">\n        <img src={logo} alt=\"reddit timer logo\" />\n      </StyledHeaderSVG>\n      <Burger open={burgerOpen} setOpen={setBurgerOpen} menuList={pages} />\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/sign.0646f198.svg\";","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledFooterSVG = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\nexport const StyledFooterSVGLink = styled(Link)`\n  margin: 0 auto;\n`;\nexport const StyledFooterLink = styled(Link)`\n  text-align: start;\n  width: 6.875rem;\n`;\nexport const FooterContainer = styled.footer`\n  display: flex;\n  align-items: center;\n  font-size: ${(props) => props.theme.font.size.small};\n  padding: 2em 17.36111%;\n  line-height: 1.249;\n`;\n","import React from 'react';\nimport sign from './media/sign.svg';\nimport {\n  StyledFooterSVG,\n  StyledFooterSVGLink,\n  StyledFooterLink,\n  FooterContainer,\n} from './FooterStyles';\n\nconst Footer = () => (\n  <FooterContainer>\n    <StyledFooterLink\n      as=\"a\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      href=\"https://profy.dev/employers\"\n    >\n      profy.dev\n    </StyledFooterLink>\n    <StyledFooterSVGLink to=\"/\">\n      <StyledFooterSVG src={sign} alt=\"reddit magnifying glass\" />\n    </StyledFooterSVGLink>\n    <StyledFooterLink data-testid=\"terms-and-privacy\" to=\"/terms\">\n      Terms & Privacy\n    </StyledFooterLink>\n  </FooterContainer>\n);\nexport default Footer;\n","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './globalStyles';\nimport HomePage from './pages/HomePage';\nimport SearchPage from './pages/SearchPage';\nimport theme from './theme';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Header />\n        {/* <ContentContainer> */}\n        <Switch>\n          <Route exact path=\"/search/:subreddit\">\n            <SearchPage />\n          </Route>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/reddit-timer-piacib\">\n            <HomePage />\n          </Route>\n          <Route>404 - Not Found</Route>\n        </Switch>\n        {/* </ContentContainer> */}\n        <Footer />\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}